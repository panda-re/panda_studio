version: "3.9"
x-secrets:
  - &s3-access-key UZgFLiypw2yKUqfm
  - &s3-secret-key HaGTqhqSRfjmjrD3patK5HBtJyyUgyMC
  - &mongo-username admin
  - &mongo-password abc123def456
  - &mongo-uri mongodb://admin:abc123def456@mongodb:27017/
  - &mongo-dbname panda_studio
services:
  panda_api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.panda-api
    ports:
      - "8080:8080"
    environment:
      S3__ENDPOINT: minio:9000
      S3__SSL: false
      S3__ACCESS_KEY: *s3-access-key
      S3__SECRET_KEY: *s3-secret-key
      MONGODB__URI: *mongo-uri
      MONGODB__DATABASE: *mongo-dbname
    depends_on:
      - minio
      - mongodb
    volumes:
      # Need access to docker.sock to run docker commands
      - /var/run/docker.sock:/var/run/docker.sock
      # Temp files so docker binding works properly
      - /tmp/panda-studio:/tmp/panda-studio
    networks:
      - panda_studio
  minio:
    image: "quay.io/minio/minio"
    ports: # or expose if we only want docker network access
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: *s3-access-key 
      MINIO_ROOT_PASSWORD: *s3-secret-key
    entrypoint: minio server /data --console-address ":9001"
    volumes:
      - minio:/data
    networks:
      - panda_studio
  mongodb:
    image: "mongo"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: *mongo-username
      MONGO_INITDB_ROOT_PASSWORD: *mongo-password
    volumes:
      - mongodb:/data/db
    networks:
      - panda_studio
  
  # Mongo express is
  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: *mongo-username
      ME_CONFIG_MONGODB_ADMINPASSWORD: *mongo-password
      ME_CONFIG_MONGODB_URL: *mongo-uri
    depends_on:
      - mongodb
    networks:
      - panda_studio
volumes:
  minio:
  mongodb:
networks:
  panda_studio: